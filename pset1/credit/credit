#include <cs50.h>
#include <stdio.h>

int check_validity(int total, int valid);
void find_card_type(int card_num);

int main(void)

{
    long card = 4003600000000014; //16 digits

    //long card = 40;

    int count = 1;
    int mod = 0;
    int sum = 0; // the sum of digits that are not multipled
    int mult;
    int first_two;
    int mult_sum; // sum of the digits that are to be multiplied (*)
    int total;
    int valid = 0; // stores whether the check_validity worked for 1 or 0
    printf("start: %ld \n", card);


    while (card > 1)
    {
        if (card < 60 && card > 10)
        {
            first_two = card;
            printf("setting first_two: %i\n", first_two);
            find_card_type(first_two);
        }

        mod = card % 10;
        // printf ("card: %ld \n", card);
        // printf ("count: %i \n" , count);
        // printf ("mod: %i \n", mod);
        // printf ("mult: %i \n", mult);
        // printf ("sum: %i \n", sum);

        // printf ("END OLD DATA **** \n");

        if (count % 2 == 0) // if num is even
            {
            if (mod * 2 > 10) // if mod * 2 > 10, sum the two digits
            {
                printf("Greater than 10! \n");
                printf ("mult: %i \n", mult);
                mult = mult + ( (mod * 2) % 10) + 1; // add this to the mult_total
                printf("mult %i \n", mult);
            }
            else
            {
                mult = mult + (mod *2);
                printf("%i ,mult \n", mult);
            }

            }
        else // for the odd digits, just add them up
        {
            sum = sum + mod;
            printf("%i ,sum is \n", sum);
        }

        count ++;
        card = card / 10 ;

        printf ("odd_sum: %i \n" , sum);
        printf ("mult_sum: %i \n" , mult);
        total = sum + mult;
        printf("total: %i\n", total);
        printf("count: %i\n", count);
        printf("card: %lu\n", card);


    }   //end of while

    printf("L 72, total =  %i\n", total);
    if (valid == 0)
    {
        if (check_validity(total, valid) == 1)
        {
            printf("VALID\n");
            find_card_type(card);
        }
        else
        {
            printf("line 75: INVALID******\n");
        }
        printf("end Progrum \n");
    }
} // end of Main


int check_validity(int total, int valid) // input total from both sets of # and check
{
    int result;
    printf("checker START, total, %i\n", total);

    if (total%10 == 0)
    {
        printf("checker shows VALID\n");
        result = 1;
        valid = 1;
    }
    else
    {
        printf("checker shows INVALID\n");
        result = 0;
    }
    return result;
}


void find_card_type(int first_two)
{
    printf("First_two arrives at find_card_type %i\n", first_two);
    // AMEX 34 / 37.
    // MC = 51, 52, 53, 54, or 55
    // Visa = 4xx

    if (first_two > 10)  // adding this IF out of despiration.
    {
        if (first_two/10 == 4)
        {
            printf("VISA\n");
        }
        else
        {
            switch (first_two) //testing for other card types
            {
                case 34:
                case 37:
                    printf("AMEX\n");
                    break;
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                    printf("Mastercard\n");
                    break;
                default:
                    printf("first two: %i\n", first_two);
                    printf("you done GOUF'ed!!!!!\n");
            }
        }
    }
    else
    {
        printf("First two less than 10!!!!\n");
    }

}
